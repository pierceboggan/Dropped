name: iOS Build & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest
          
      - name: Install brew dependencies
        run: |
          brew install jq

      - name: Install dependencies
        run: |
          sudo xcode-select -s "/Applications/Xcode_$(xcodebuild -version | grep -Eo '[0-9]+\.[0-9]+' | head -1).app"
          xcodebuild -version
          
      - name: Set up simulator
        run: |
          echo "Available simulators:"
          xcrun simctl list
          # Try to find an iPhone simulator and boot it, fallback gracefully if not found
          SIMULATOR_UDID=$(xcrun simctl list devices available -j | jq -r '.devices | to_entries | map(.value) | flatten | map(select(.name | contains("iPhone"))) | first | .udid // empty')
          if [ -n "$SIMULATOR_UDID" ]; then
            echo "Booting simulator with UDID: $SIMULATOR_UDID"
            xcrun simctl boot "$SIMULATOR_UDID" || echo "Could not boot simulator, may already be booted"
          else
            echo "No available iPhone simulator found, will use default instead"
          fi

      - name: Build app
        run: |
          xcodebuild -project Dropped.xcodeproj -scheme Dropped -destination 'platform=iOS Simulator,name=Any iOS Simulator Device' build

      - name: Run unit tests
        run: |
          xcodebuild -project Dropped.xcodeproj -scheme Dropped -destination 'platform=iOS Simulator,name=Any iOS Simulator Device' -only-testing:DroppedTests test

      - name: Run UI tests
        run: |
          xcodebuild -project Dropped.xcodeproj -scheme Dropped -destination 'platform=iOS Simulator,name=Any iOS Simulator Device' -only-testing:DroppedUITests test
